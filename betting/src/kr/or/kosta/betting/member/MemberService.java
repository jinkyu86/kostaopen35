package kr.or.kosta.betting.member;

public class MemberService {

	/**
	 * 멤버 삽입 메서드
	 * 
	 * @param request
	 * @param response
	 */
	public void addMember(HttpServletRequest request,
			HttpServletResponse response) {
		/* default generated stub */;
		return null;
	}

	/**
	 * 멤버 삽입을 위한 폼 메서드
	 * 
	 * @param request
	 * @param response
	 */
	public void addMemberForm(HttpServletRequest request,
			HttpServletResponse response) {
		/* default generated stub */;
		return null;
	}

	/**
	 * 멤버의 아이디가 유일한 값인지 체크하는 메서드
	 * 
	 * @param request
	 * @param response
	 */
	public void checkMemberID(HttpServletRequest request,
			HttpServletResponse response) {
		/* default generated stub */;
		return null;
	}

	/**
	 * 멤버데이터를 에디트 하는 메서드
	 * 
	 * @param request
	 * @param response
	 */
	public void editMember(HttpServletRequest request,
			HttpServletResponse response) {
		/* default generated stub */;
		return null;
	}

	/**
	 * 멤버 데이터를 에디트하기 위한 삽입 데이터를 받기위한 메서드
	 * 
	 * @param request
	 * @param response
	 */
	public void editMemberForm(HttpServletRequest request,
			HttpServletResponse response) {
		/* default generated stub */;
		return null;
	}

	/**
	 * 로그인 메서드
	 * 
	 * @param request
	 * @param response
	 */
	public void login(HttpServletRequest request, HttpServletResponse response) {
		/* default generated stub */;
		return null;
	}

	/**
	 * 로그아웃메서드
	 * 
	 * @param request
	 * @param response
	 */
	public void logout(HttpServletRequest request, HttpServletResponse response) {
		/* default generated stub */;
		return null;
	}

	/**
	 * 가입 탈퇴를 위한 메서드
	 * 
	 * @param request
	 * @param response
	 */
	public void removeMember(HttpServletRequest request,
			HttpServletResponse response) {
		/* default generated stub */;
		return null;
	}

	/**
	 * 모든 멤버 데이터를 조회하는 메서드
	 * 
	 * @param request
	 * @param response
	 */
	public void viewMemberList(HttpServletRequest request,
			HttpServletResponse response) {
		/* default generated stub */;
		return null;
	}

	/**
	 * 선택된 아이디의 멤버데이터를 조회하는 메서드
	 * 
	 * @param request
	 * @param response
	 */
	public void viewMember(HttpServletRequest request,
			HttpServletResponse response) {
		/* default generated stub */;
		return null;
	}

	/**
	 * 모든 멤버리스트를 미네랄로 오름차순 정렬한 메서드
	 * 
	 * @param request
	 * @param response
	 */
	public void viewMemberRankingList(HttpServletRequest request,
			HttpServletResponse response) {
		/* default generated stub */;
		return null;
	}

	/**
	 * 랭킹데이터의 폼 구현 메서드
	 * 
	 * @param request
	 * @param response
	 */
	public void viewMemberRankingListForm(HttpServletRequest request,
			HttpServletResponse response) {
		/* default generated stub */;
		return null;
	}
}
