<?xml version="1.0" encoding="UTF-8"?>
<!--aop연동 추가-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<bean id="movieDAO" class="kr.or.kosta.moviesystem.movie.MovieDAO">
		<property name="sqlSessionTemplate">
			<ref bean="sqlSessionTemplate"/>
		</property>
	</bean>
	
	<bean id="movieService" class="kr.or.kosta.moviesystem.movie.MovieService">
		<constructor-arg>
			<ref bean="movieDAO"/>
		</constructor-arg>
	</bean>

	<bean id="goodDAO" class="kr.or.kosta.moviesystem.good.GoodDAO">
		<property name="sqlSessionTemplate">
			<ref bean="sqlSessionTemplate"/>
		</property>
	</bean>
	
	<bean id="goodService" class="kr.or.kosta.moviesystem.good.GoodService">
		<constructor-arg>
			<ref bean="goodDAO"/>
		</constructor-arg>
	</bean>
	
	<bean id="buyDAO" class="kr.or.kosta.moviesystem.buy.BuyDAO">
		<property name="sqlSessionTemplate">
			<ref bean="sqlSessionTemplate"/>
		</property>
	</bean>
	
	<bean id="buyService" class="kr.or.kosta.moviesystem.buy.BuyService">
		<constructor-arg>
			<ref bean="buyDAO"/>
		</constructor-arg>
	</bean>
	
	<bean id="memberDAO" class="kr.or.kosta.moviesystem.member.MemberDAO">
		<property name="sqlSessionTemplate">
			<ref bean="sqlSessionTemplate"/>
		</property>
	</bean>
	
	<bean id="memberService" class="kr.or.kosta.moviesystem.member.MemberService">
		<constructor-arg>
			<ref  bean="memberDAO"/>
		</constructor-arg>
	</bean>
	
		<!-- spring과 ibatis를 연동시키기 위한 설정 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@192.168.0.28:1521:XE"/>
		<property name="username" value="scott"/>
		<property name="password" value="tiger"/>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="/WEB-INF/classes/sqlmap-config.xml"/>
	</bean>
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>
	
	<!--aop연동 추가 참고-->
	<bean id="errorlog" class="kr.or.kosta.moviesystem.aop.ExceptionAdvice"/>
	<!--AOP설정에 의해서 스트럿츠가 메서드 호출시 ExceptionAdvice의 aroundException이 대신호출
	실행시 에러 발생-스트럿츠가 메서드 실행전에 해당메서드가 진짜 존재하는지 체크하고 실행
	ExceptionAdvice에는 스트럿츠가 호출한 메서드(viewStudentList())
	스트럿츠에서 메서드 존재 여부 체크 못하게 설정-->
	<aop:config proxy-target-class="true">
		<aop:aspect id="logginAspect1" ref="errorlog">
			<aop:pointcut id="publicmethod1" expression="execution(* kr.or.kosta.*.*Service.*(..))"/>
			<aop:around pointcut-ref="publicmethod1" method="aroundException"/>
		</aop:aspect>
	</aop:config>
	
	<bean id="loginlog" class="kr.or.kosta.moviesystem.aop.LoginAdvice"/>
	<aop:config proxy-target-class="true">
		<aop:aspect id="logginAspect1" ref="loginlog">
			<aop:pointcut id="publicmethod1" expression="execution(* kr.or.kosta.moviesystem.member.MemberService.mypage(..))"/>
			<aop:pointcut id="publicmethod2" expression="execution(* kr.or.kosta.moviesystem.member.MemberService.dropMemberForm(..))"/>
			<aop:pointcut id="publicmethod3" expression="execution(* kr.or.kosta.moviesystem.member.MemberService.editMemberForm(..))"/>
			<aop:pointcut id="publicmethod4" expression="execution(* kr.or.kosta.moviesystem.member.MemberService.*List(..))"/>
			
			
			<aop:around pointcut-ref="publicmethod1" method="aroundLogin"/>
			<aop:around pointcut-ref="publicmethod2" method="aroundLogin"/>
			<aop:around pointcut-ref="publicmethod3" method="aroundLogin"/>
			<aop:around pointcut-ref="publicmethod4" method="aroundLogin"/>
		
			
			
		</aop:aspect>
	</aop:config>
	<!--aop연동 추가 참고-->
</beans>
